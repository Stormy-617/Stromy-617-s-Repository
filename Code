let bubblesAmount = 50;
let bubbleX = [];
let bubbleY = [];
let bubbleD = [];

//Create variables for a cloud
let cloudAmount = 2;
let cloudX = [];
let cloudY = 200;
let cloudD = 100;

function setup() {
  createCanvas(400, 400);
  // Create bubbles with random positions and sizes
  for (let i = 0; i < bubblesAmount; i++) {
    bubbleX[i] = random(0, 400);
    bubbleY[i] = random(0, 400);
    bubbleD[i] = random(1, 15);
  }
  
  for (let i2 = 0; i2 < cloudAmount; i2++) {
    cloudX[i2] = 0;
    cloudY[i2] = 0;
  }
}

function draw() {
  frameRate(60);
  
  summer();
  Summer_animatedBubbles();
  Summer_animatedCloud();
}

function summer() {
  strokeWeight(0);
  fillGradient('linear', {
    from: [400, 25],
    to: [400, 300],
    steps: [
      color(0, 75, 164),
      color(255, 96, 0),
      color(0, 75, 164),
    ]
  });
  rect(0, 0, 400, 300);

  fillGradient('radial', {
    from: [200, 150, 0],
    to: [200, 150, 75],
    steps: [
      color(255),
      color(255, 200, 0),
      color(255, 50, 0),
      color(0)
    ]
  });
  circle(200, 150, 75);

  fill(194, 178, 128);
  rect(0, 300, 400, 100);
  noFill();

  fill(205, 178, 128);
  circle(25, 325, 5);
  noFill();
}

function Summer_animatedBubbles() {
  fill(255, 100);
  noStroke();
  for (let i = 0; i < bubblesAmount; i++) {
    bubbleY[i] += random(-1.5, -0.5);
    if (bubbleY[i] < -5) bubbleY[i] = height; //This resets back to floor when touching HEIGHT
    circle(bubbleX[i], bubbleY[i], bubbleD[i]);
  } //animatedBubble code created with AI, and edited by me

} //End Summer_animatedBubble 

function Summer_animatedCloud() { 
  fillGradient('linear', {
    from: [200, 150],
    to: [400, 200],
    steps: [
      color(255, 150, 0),
      color(200, 100, 0),
      color(100),
      color(0, 25, 120),
      color(0, 75, 164),
    ]
  });
  noStroke();
for (let i2 = 0; i2 < cloudAmount; i2++) {
  cloudX[i2] += 1;
  if (cloudX[i2] > 450) cloudX[i2] = -cloudD;
  ellipse(cloudX[i2], cloudY, cloudD, 50);
}
}








































function fall() {
    //Gradient Backdrop
  fillGradient('radial', {
    from : [200, 200, 0], // x, y, radius
    to : [200, 200, 200], // x, y, radius
    steps : [
        color(255),
        color(255, 0, 0),
        color(0),
    ] // Array of p5.color objects or arrays containing [p5.color Object, Color Stop (0 to 1)]
});
  square(-100, -100, 600, 600);
} //End fall()

function winter() {
    //Gradient Backdrop
  fillGradient('radial', {
    from : [200, 200, 0], // x, y, radius
    to : [200, 200, 200], // x, y, radius
    steps : [
        color(255),
        color(255, 0, 0),
        color(0),
    ] // Array of p5.color objects or arrays containing [p5.color Object, Color Stop (0 to 1)]
});
  square(-100, -100, 600, 600);
  
  
  
} //End winter()

function spring() {
    //Gradient Backdrop
  fillGradient('radial', {
    from : [200, 200, 0], // x, y, radius
    to : [200, 200, 200], // x, y, radius
    steps : [
        color(255),
        color(255, 0, 0),
        color(0),
    ] // Array of p5.color objects or arrays containing [p5.color Object, Color Stop (0 to 1)]
});
  square(-100, -100, 600, 600);
  
  
  
} //End spring






