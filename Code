function setup() {
  createCanvas(400, 400);
  //For Summer
  // Create bubbles with random positions and sizes
  for (let i = 0; i < bubblesAmount; i++) {
    bubbleX[i] = random(0, 400);
    bubbleY[i] = random(0, 400);
    bubbleD[i] = random(1, 15);
  }
  
  for (let i2 = 0; i2 < cloudAmount; i2++) {
    cloudX[i2] = 0;
    cloudY[i2] = 0;
  }
  
  //For Fall
  for (let i = 0; i < leafCount; i++) {
  leavesX[i] = random(0, 100);
  leavesY[i] = random(125, 225);
  leavesD[i] = random(10, 25);
  leavesRed[i] = random(200, 255);
  leavesOrange[i] = random(50, 180);
  }
  
  for (let i3 = 0; i3 < leafAmount; i3++) {
    leafX[i3] = random(0,400);
    leafY[i3] = random(0,400);
    leafZ[i3] = random(0,400);
  }
}

function draw() {
  frameRate(60);
  start();
}

let isStartActive = false;

function start() {
  
  //Summer button visual
  strokeWeight(0);
  fill(255);
  rect(0,0,400,400)
  noFill();
  
  //Summer Button box
  strokeWeight(0);
  fill('red')
  rect(150,50,100,75);
  noFill(0);
  fill(255);
  textSize(20);
  text('Summer', 162, 94);
  
  strokeWeight(0);
  fill('orange');
  rect(250, 150, 100, 75);
  noFill();
  fill(255);
  textSize(20);
  text('Fall', 282, 195);
  
  //Interaction for summer
  if (summerIsActive == true) {
    summer();
} if (mouseIsPressed && mouseX >= 150 && mouseX <= 250 && mouseY >= 50 && mouseY <=100) {
      summerIsActive = true;
  }  
  
  if (fallIsActive == true) {
    fall();
  } if (mouseIsPressed && mouseX >= 250 && mouseX <= 350 && mouseY >= 150 && mouseY <= 225) {
      fallIsActive = true;
  } 

} //End Start

//Summer Code

//All code relating to summer image
let summerIsActive = false;

//Create variables for bubbles
let bubblesAmount = 50;
let bubbleX = [];
let bubbleY = [];
let bubbleD = [];

//Create variables for a cloud
let cloudAmount = 2;
let cloudX = [];
let cloudY = 175;
let cloudD = 100;

function summer() {
  strokeWeight(0);
  fillGradient('linear', {
    from: [400, 25],
    to: [400, 300],
    steps: [
      color(0, 75, 164),
      color(255, 96, 0),
      color(0, 75, 164),
    ]
  });
  rect(0, 0, 400, 300);

  fillGradient('radial', {
    from: [200, 150, 0],
    to: [200, 150, 75],
    steps: [
      color(255),
      color(255, 200, 0),
      color(255, 50, 0),
      color(0)
    ]
  });
  circle(200, 150, 75);

  fill(194, 178, 128);
  rect(0, 300, 400, 100);
  noFill();

  fill(205, 178, 128);
  circle(25, 325, 5);
  noFill();
  
  Summer_animatedBubbles();
  Summer_animatedCloud();
  Summer_nature();
  Summer_trees();
  
  fill(0);
  rect(0,0,50,40);
  
  fill(255);
  textSize(15);
  text('Exit', 12, 25);
  
  if (mouseIsPressed && mouseX >= 0 && mouseX <= 50 && mouseY >= 0 && mouseY <= 40) {
    summerIsActive = false;
  }
}

function Summer_animatedBubbles() {
  fill(255, 100);
  for (let i = 0; i < bubblesAmount; i++) {
    bubbleY[i] += random(-1.5, -0.5);
    if (bubbleY[i] < -5) bubbleY[i] = height; //This resets back to floor when touching HEIGHT
    circle(bubbleX[i], bubbleY[i], bubbleD[i]);
  } //animatedBubble code created with AI, and edited by me

} //End Summer_animatedBubble 

function Summer_animatedCloud() { 
  fillGradient('linear', {
    from: [200, 150],
    to: [400, 200],
    steps: [
      color(255, 150, 0),
      color(200, 100, 0),
      color(100),
      color(100),
      color(0, 25, 120),
      color(0, 75, 164),
    ]
  });
for (let i2 = 0; i2 < cloudAmount; i2++) {
  cloudX[i2] += .5;
  if (cloudX[i2] > 750) cloudX[i2] = -cloudD;
  ellipse(cloudX[i2], cloudY, cloudD, 50);
  }
}

function Summer_nature() {
  fill('brown');
  arc(100,375,100,75, -3.14, 0);
  arc(50,375,100,50, -3.14, 0);
  arc(50,300,75,150, -3.14, 0);
  arc(300,325,100,75, -3.14, 0);
  arc(350,325,100,50, -3.14, 0);
}

function Summer_trees() {
  fill('rgb(165,78,42)');
  rect(0,100,25,300);
  rect(375,125,25,200);
  
  fill('green');
  arc(50,100,150,100, -3.15, -270);
  arc(375,125,150,100, -3.15, -270);
  
  fill('beige');
  circle(30,110,25);
  circle(375,130,25);
}

//Fall Code

//All code relating to fall
fallIsActive = false;

let leafCount = 100;
let leavesX = [];
let leavesY = [];
let leavesD = [];
let leavesRed = [];
let leavesOrange = [];

let leafAmount = 50;
let leafX = [];
let leafY = [];
let leafZ = [];

function fall() {
  strokeWeight(0);
  fillGradient('linear', {
    from: [300, -100],
    to: [300, 400],
    steps: [
      color(0, 100, 150),
      color(255, 200, 0),
      color(0, 100, 150),
    ]
  });
  rect(0, 0, 400, 275);
  
  fillGradient('radial', {
  from: [150, 120, 0],
  to: [150, 120, 75],
  steps: [
    color(255),
    color(255, 200, 0),
    color(255, 205, 0),
    color(255)
  ]
});
  circle(150, 120, 100);
  
fillGradient('linear', {
  from: [200, 200, 0],
  to: [200, 425, 400],
  steps: [
    color(0),
    color(100, 50, 0),
    color(255, 200,0),
  ]
});
  rect(0,275,400,125);

  Fall_mountains();
  Fall_trees();
  Fall_leaves();
  Fall_pumpkin();
  strokeWeight(0)
  
  fill(0);
  rect(0,0,50,40);
  
  fill(255);
  textSize(15);
  text('Exit', 12, 25);
  
  if (mouseIsPressed && mouseX >= 0 && mouseX <= 50 && mouseY >= 0 && mouseY <= 40) {
    fallIsActive = false;
  }
}

function Fall_mountains() {
  strokeWeight(0);
  fill(100,50,0);
  arc(50,275,200,400,-3.14,0);
  arc(200,275,200,300,-3.14,0);
  arc(325,275,200,450,-3.14,0);
  noFill();
}

//Add trees overlay
function Fall_trees() {
  fill(150,75,0)
  rect(25,150,25,250);
  fill(150,75,0);
  rect(350,150,10,150);
  strokeWeight(10);
  stroke(150,75,0);
  line(357,150,300,125);
  line(357,150,400,100);
  
  strokeWeight(0);
  for (let i = 0; i < leafCount; i++) {
    fill(leavesRed[i], leavesOrange[i], 0);
    circle(leavesX[i], leavesY[i], leavesD[i]);
  }
}

function Fall_leaves() {
  for (let i = 0; i < leafAmount; i++) {
    // Simulate falling
    leafY[i] += 1 + random(0.5);
    leafX[i] += sin(frameCount * 0.05 + i) * 0.5; //

    if (leafY[i] > height) {
      leafY[i] = random(-50, 0);
      leafX[i] = random(0, width);
    }

    fill(leavesRed[i], leavesOrange[i], 0);
    ellipse(leafX[i], leafY[i], 10, 6);
  }
  //Created with ai, but I added random colors to the leaves
}

//Maybe add some pumpkins
function Fall_pumpkin() {
  fill(255,100,0);
  circle(100,350,50)
  noFill();
  strokeWeight(10);
  stroke(150,75,0);
  line(100,330,100,325);
  noStroke();
  
  fill(255,100,0);
  circle(250,300,30)
  noFill();
  strokeWeight(8);
  stroke(150,75,0);
  line(250,290,250,285);
  noStroke();
}

//Winter code

//All code relating to winter
winterIsActive = false;



































function winter() {
    //Gradient Backdrop
  fillGradient('radial', {
    from : [200, 200, 0], // x, y, radius
    to : [200, 200, 200], // x, y, radius
    steps : [
        color(255),
        color(255, 0, 0),
        color(0),
    ] // Array of p5.color objects or arrays containing [p5.color Object, Color Stop (0 to 1)]
});
  square(-100, -100, 600, 600);
  
  
  
} //End winter()

function spring() {
    //Gradient Backdrop
  fillGradient('radial', {
    from : [200, 200, 0], // x, y, radius
    to : [200, 200, 200], // x, y, radius
    steps : [
        color(255),
        color(255, 0, 0),
        color(0),
    ] // Array of p5.color objects or arrays containing [p5.color Object, Color Stop (0 to 1)]
});
  square(-100, -100, 600, 600);
  
  
  
} //End spring






